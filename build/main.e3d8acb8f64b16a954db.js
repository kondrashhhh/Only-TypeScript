(()=>{"use strict";var n,r={170:(n,r,t)=>{n.exports=t.p+"assets/fonts/610bc32a7e32c292ce59.ttf"},245:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".Typography-module__h2__DOeKz{font-weight:bold;font-size:2.9166666667vw;line-height:3.3854166667vw;color:#42567a}@media(max-width: 680px){.Typography-module__h2__DOeKz{font-size:6.25vw;line-height:120%}}","",{version:3,sources:["webpack://./src/components/Typography/Typography.module.scss","webpack://./src/styles/variables.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAGA,8BACI,gBAAA,CACA,wBAAA,CACA,0BAAA,CACA,aCLe,CCGlB,yBFFD,8BAOQ,gBAAA,CACA,gBAAA,CAAA",sourcesContent:["@use \"@/styles/mixins.scss\" as *;\n@use '@styles/variables.scss' as *;\r\n\r\n.h2 {\r\n    font-weight: bold;\r\n    font-size: calcVW(56);\r\n    line-height: calcVW(65);\r\n    color: $color-black-blue;\r\n\r\n    @include vp--680 {\r\n        font-size: calcVW(20, 320);\r\n        line-height: 120%;\r\n    }\r\n}","$color-blue: #3877EE;\r\n$color-pink: #EF5DA8;\r\n$color-black-blue: #42567A;","@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={h2:"Typography-module__h2__DOeKz"};const A=s},346:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".ArrowButtonRight-module__btn__eFY0v{width:2.5vw;height:2.5vw;display:inline-flex;align-items:center;justify-content:center;border:1px solid rgba(66,86,122,.5);border-radius:50%;background:none;transition:all .3s ease-out}@media(max-width: 1600px){.ArrowButtonRight-module__btn__eFY0v{width:40px;height:40px}}.ArrowButtonRight-module__btn__eFY0v:hover{transform:scale(1.1);background:#fff}.ArrowButtonRight-module__btn__eFY0v.ArrowButtonRight-module__isDisabled__eCgU0{opacity:.5;transform:none;background:none}","",{version:3,sources:["webpack://./src/pages/Home/AnimationSlider/Slider/Arrows/ArrowButtonRight/ArrowButtonRight.module.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAEA,qCACI,WAAA,CACA,YAAA,CAEA,mBAAA,CACA,kBAAA,CACA,sBAAA,CAEA,mCAAA,CACA,iBAAA,CACA,eAAA,CACA,2BAAA,CCgBH,0BD3BD,qCAcQ,UAAA,CACA,WAAA,CAAA,CAGJ,2CACI,oBAAA,CACA,eAAA,CAGJ,gFACI,UAAA,CACA,cAAA,CACA,eAAA",sourcesContent:['@use "@/styles/mixins.scss" as *;\n\r\n.btn {\r\n    width: calcVW(40, 1600);\r\n    height: calcVW(40, 1600);\r\n\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    \r\n    border: 1px solid rgba($color: #42567A, $alpha: 0.5);\r\n    border-radius: 50%;\r\n    background: none;\r\n    transition: all 0.3s ease-out;\r\n\r\n    @include vp--1600 {\r\n        width: 40px;\r\n        height: 40px;\r\n    }\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        background: #FFFFFF;\r\n    }\r\n\r\n    &.isDisabled {\r\n        opacity: 0.5;\r\n        transform: none;\r\n        background: none;\r\n    }\r\n}',"@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={btn:"ArrowButtonRight-module__btn__eFY0v",isDisabled:"ArrowButtonRight-module__isDisabled__eCgU0"};const A=s},651:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".AnimationSlider-module__wrapper__GjmoQ{position:relative;overflow:hidden}@media(max-width: 680px){.AnimationSlider-module__wrapper__GjmoQ{overflow:visible}}.AnimationSlider-module__sliderWrapper__isfV3{position:relative;width:100%;min-height:400px}@media(max-width: 680px){.AnimationSlider-module__sliderWrapper__isfV3{min-height:62.5vw}}.AnimationSlider-module__slider__poRsA{width:530px;height:530px;margin:0 auto;border:1px solid rgba(66,86,122,.1);border-radius:100%;overflow:visible !important;position:relative;z-index:10}@media(max-width: 680px){.AnimationSlider-module__slider__poRsA{display:none}}.AnimationSlider-module__line__n_5qA{position:absolute;background:rgba(66,86,122,.1);height:1px;width:100%;top:50%;z-index:-1}@media(max-width: 680px){.AnimationSlider-module__line__n_5qA{display:none}}","",{version:3,sources:["webpack://./src/pages/Home/AnimationSlider/AnimationSlider.module.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAGA,wCACI,iBAAA,CACA,eAAA,CAAA,yBAFJ,wCAIQ,gBAAA,CAAA,CAIR,8CACI,iBAAA,CACA,UAAA,CACA,gBAAA,CCTH,yBDMD,8CAMQ,iBAAA,CAAA,CAIR,uCACI,WAAA,CACA,YAAA,CACA,aAAA,CACA,mCAAA,CACA,kBAAA,CACA,2BAAA,CACA,iBAAA,CACA,UAAA,CCxBH,yBDgBD,uCAYQ,YAAA,CAAA,CAIR,qCACI,iBAAA,CACA,6BAAA,CACA,UAAA,CACA,UAAA,CACA,OAAA,CACA,UAAA,CCtCH,yBDgCD,qCASQ,YAAA,CAAA",sourcesContent:["@use \"@/styles/mixins.scss\" as *;\n@use '@styles/variables.scss' as *;\r\n\r\n.wrapper {\r\n    position: relative;\r\n    overflow: hidden;\r\n    @include vp--680 {\r\n        overflow: visible;\r\n    }\r\n}\r\n\r\n.sliderWrapper {\r\n    position: relative;\r\n    width: 100%;\r\n    min-height: 400px;\r\n\r\n    @include vp--680 {\r\n        min-height: calcVW(200, 320);\r\n    }\r\n}\r\n\r\n.slider {\r\n    width: 530px;\r\n    height: 530px;\r\n    margin: 0 auto;  \r\n    border: 1px solid rgba($color: $color-black-blue, $alpha: 0.1);\r\n    border-radius: 100%;\r\n    overflow: visible !important;\r\n    position: relative;\r\n    z-index: 10;\r\n\r\n\r\n    @include vp--680 {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.line {\r\n    position: absolute;\r\n    background: rgba($color: $color-black-blue, $alpha: 0.1);\r\n    height: 1px;\r\n    width: 100%;\r\n    top: 50%;\r\n    z-index: -1;\r\n\r\n    @include vp--680 {\r\n        display: none;\r\n    }\r\n}","@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={wrapper:"AnimationSlider-module__wrapper__GjmoQ",sliderWrapper:"AnimationSlider-module__sliderWrapper__isfV3",slider:"AnimationSlider-module__slider__poRsA",line:"AnimationSlider-module__line__n_5qA"};const A=s},765:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,'.PageTitle-module__titleBlock__Rt4KO{padding-top:50px;gap:4.1666666667vw}.PageTitle-module__titleBlock__Rt4KO::before{content:"";width:.2604166667vw;height:6.25vw;background:linear-gradient(#3877EE 0%, #EF5DA8 100%)}@media(max-width: 992px){.PageTitle-module__titleBlock__Rt4KO::before{display:none}}@media(max-width: 992px){.PageTitle-module__titleBlock__Rt4KO{gap:0}}',"",{version:3,sources:["webpack://./src/components/PageTitle/PageTitle.module.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAGA,qCACI,gBAAA,CACA,kBAAA,CAEA,6CACI,UAAA,CACA,mBAAA,CACA,aAAA,CACA,oDAAA,CCMP,yBDVG,6CAOQ,YAAA,CAAA,CCGX,yBDdD,qCAgBQ,KAAA,CAAA",sourcesContent:['@use "@/styles/mixins.scss" as *;\n@use \'@styles/variables.scss\' as *;\r\n\r\n.titleBlock {\r\n    padding-top: 50px;\r\n    gap: calcVW(80);\r\n\r\n    &::before {\r\n        content: "";\r\n        width: calcVW(5);\r\n        height: calcVW(120);\r\n        background: linear-gradient($color-blue 0%, $color-pink 100%);\r\n\r\n        @include vp--992 {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    @include vp--992 {\r\n        gap: 0;\r\n    }\r\n}',"@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={titleBlock:"PageTitle-module__titleBlock__Rt4KO"};const A=s},893:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".Container-module__container__kJXI1{position:relative;padding:0 14vw;height:100%}@media(max-width: 1280px){.Container-module__container__kJXI1{padding:0 9.375vw}}","",{version:3,sources:["webpack://./src/components/Container/Container.module.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAGA,oCACI,iBAAA,CACA,cAAA,CACA,WAAA,CCiBH,0BDpBD,oCAMQ,iBAAA,CAAA",sourcesContent:["@use \"@/styles/mixins.scss\" as *;\n@use '@styles/variables.scss' as *;\r\n\r\n.container {\r\n    position: relative;\r\n    padding: 0 14vw;\r\n    height: 100%;\r\n\r\n    @include vp--1280 {\r\n        padding: 0 calcVW(30, 320);\r\n    }\r\n}\r\n","@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={container:"Container-module__container__kJXI1"};const A=s},1582:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".ArrowButtonLeft-module__btn__t70rO{width:2.6041666667vw;height:2.6041666667vw;display:inline-flex;align-items:center;justify-content:center;border:1px solid rgba(66,86,122,.5);border-radius:50%;background:none;transition:all .3s ease-out}@media(max-width: 1600px){.ArrowButtonLeft-module__btn__t70rO{width:40px;height:40px}}.ArrowButtonLeft-module__btn__t70rO:hover{transform:scale(1.1);background:#fff}.ArrowButtonLeft-module__btn__t70rO.ArrowButtonLeft-module__isDisabled__YolbV{opacity:.5;transform:none;background:none}","",{version:3,sources:["webpack://./src/pages/Home/AnimationSlider/Slider/Arrows/ArrowButtonLeft/ArrowButtonLeft.module.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAEA,oCACI,oBAAA,CACA,qBAAA,CAEA,mBAAA,CACA,kBAAA,CACA,sBAAA,CAEA,mCAAA,CACA,iBAAA,CACA,eAAA,CACA,2BAAA,CCgBH,0BD3BD,oCAeQ,UAAA,CACA,WAAA,CAAA,CAGJ,0CACI,oBAAA,CACA,eAAA,CAGJ,8EACI,UAAA,CACA,cAAA,CACA,eAAA",sourcesContent:['@use "@/styles/mixins.scss" as *;\n\r\n.btn {\r\n    width: calcVW(50);\r\n    height: calcVW(50);\r\n\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    border: 1px solid rgba($color: #42567A, $alpha: 0.5);\r\n    border-radius: 50%;\r\n    background: none;\r\n    transition: all 0.3s ease-out;\r\n\r\n\r\n    @include vp--1600 {\r\n        width: 40px;\r\n        height: 40px;\r\n    }\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        background: #FFFFFF;\r\n    }\r\n\r\n    &.isDisabled {\r\n        opacity: 0.5;\r\n        transform: none;\r\n        background: none;\r\n    }\r\n}\r\n',"@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={btn:"ArrowButtonLeft-module__btn__t70rO",isDisabled:"ArrowButtonLeft-module__isDisabled__YolbV"};const A=s},2901:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".SlideTitle-module__title__znyCH{position:absolute;left:75px;font-size:20px;font-weight:bold;color:#42567a}","",{version:3,sources:["webpack://./src/pages/Home/AnimationSlider/Slider/SlideTitle/SlideTitle.module.scss","webpack://./src/styles/variables.scss"],names:[],mappings:"AAGA,iCACI,iBAAA,CACA,SAAA,CACA,cAAA,CACA,gBAAA,CACA,aCNe",sourcesContent:["@use \"@/styles/mixins.scss\" as *;\n@use '@styles/variables.scss' as *;\r\n\r\n.title {\r\n    position: absolute;\r\n    left: 75px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: $color-black-blue;\r\n}","$color-blue: #3877EE;\r\n$color-pink: #EF5DA8;\r\n$color-black-blue: #42567A;"],sourceRoot:""}]),s.locals={title:"SlideTitle-module__title__znyCH"};const A=s},3344:(n,r,t)=>{n.exports=t.p+"assets/fonts/12e3683f9192436a7be8.ttf"},4551:(n,r,t)=>{var e=t(4848),i=t(5338),o=t(5072),s=t.n(o),A=t(7825),a=t.n(A),l=t(7659),c=t.n(l),d=t(5056),p=t.n(d),m=t(540),u=t.n(m),C=t(1113),x=t.n(C),h=t(7391),g={};g.styleTagTransform=x(),g.setAttributes=p(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),s()(h.A,g),h.A&&h.A.locals&&h.A.locals;var f=t(8416),b={};b.styleTagTransform=x(),b.setAttributes=p(),b.insert=c().bind(null,"head"),b.domAPI=a(),b.insertStyleElement=u(),s()(f.A,b);const w=f.A&&f.A.locals?f.A.locals:void 0;var v=function(){return v=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},v.apply(this,arguments)},_=function(n){var r=n.children;return(0,e.jsx)("div",v({className:w.layout},{children:r}))},y=t(6781),B={};B.styleTagTransform=x(),B.setAttributes=p(),B.insert=c().bind(null,"head"),B.domAPI=a(),B.insertStyleElement=u(),s()(y.A,B);const S=y.A&&y.A.locals?y.A.locals:void 0;var k=function(){return(0,e.jsx)("div",{className:S.line})},F=t(5244),E=t(893),j={};j.styleTagTransform=x(),j.setAttributes=p(),j.insert=c().bind(null,"head"),j.domAPI=a(),j.insertStyleElement=u(),s()(E.A,j);const O=E.A&&E.A.locals?E.A.locals:void 0;var $=function(){return $=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},$.apply(this,arguments)},D=function(n){var r=n.children,t=(0,F.U)("(max-width: 680px)");return(0,e.jsxs)("div",$({className:O.container},{children:[!t&&(0,e.jsx)(k,{}),r]}))},I=t(6942),R=t.n(I),P=t(245),U={};U.styleTagTransform=x(),U.setAttributes=p(),U.insert=c().bind(null,"head"),U.domAPI=a(),U.insertStyleElement=u(),s()(P.A,U);const z=P.A&&P.A.locals?P.A.locals:void 0;var W=function(){return W=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},W.apply(this,arguments)},G=function(n){var r=n.tag,t=n.variant,i=n.className,o=n.children,s=r;return(0,e.jsx)(s,W({className:R()(z.title,z[t],i)},{children:o}))},N=t(5693),T={};T.styleTagTransform=x(),T.setAttributes=p(),T.insert=c().bind(null,"head"),T.domAPI=a(),T.insertStyleElement=u(),s()(N.A,T);const Y=N.A&&N.A.locals?N.A.locals:void 0;var Q=function(){return Q=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},Q.apply(this,arguments)},L=function(n){var r=n.className,t=n.children;return(0,e.jsx)("div",Q({className:R()(Y.flex,r||"")},{children:t}))},M=t(765),q={};q.styleTagTransform=x(),q.setAttributes=p(),q.insert=c().bind(null,"head"),q.domAPI=a(),q.insertStyleElement=u(),s()(M.A,q);const H=M.A&&M.A.locals?M.A.locals:void 0;var V=function(){return V=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},V.apply(this,arguments)},K=function(n){var r=n.children;return(0,e.jsx)(L,V({className:H.titleBlock},{children:(0,e.jsx)(G,V({tag:"h2",variant:"h2"},{children:r}))}))},Z=t(6540),J=t(9861),X={};X.styleTagTransform=x(),X.setAttributes=p(),X.insert=c().bind(null,"head"),X.domAPI=a(),X.insertStyleElement=u(),s()(J.A,X);const nn=J.A&&J.A.locals?J.A.locals:void 0;var rn=t(5880),tn=function(){return tn=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},tn.apply(this,arguments)},en=function(n){var r=n.periodStart,t=n.periodEnd,i=(0,Z.useRef)(null),o=(0,Z.useRef)(null),s=(0,Z.useRef)(r),A=(0,Z.useRef)(t);return(0,Z.useEffect)(function(){if(i.current&&o.current){if(r!==s.current){var n=Math.min(1,.2*Math.abs(r-s.current));rn.os.fromTo(i.current,{textContent:s.current.toString()},{textContent:r.toString(),duration:n,ease:"power2.out",snap:{textContent:1},onUpdate:function(){i.current&&(i.current.textContent=Math.floor(Number(this.targets()[0].textContent)).toString())}}),s.current=r}t!==A.current&&(n=Math.min(1,.2*Math.abs(t-A.current)),rn.os.fromTo(o.current,{textContent:A.current.toString()},{textContent:t.toString(),duration:n,ease:"power2.out",snap:{textContent:1},onUpdate:function(){o.current&&(o.current.textContent=Math.floor(Number(this.targets()[0].textContent)).toString())}}),A.current=t)}},[r,t]),(0,e.jsxs)(L,tn({className:nn.periodWrapper},{children:[(0,e.jsx)("span",tn({ref:i},{children:r})),(0,e.jsx)("span",tn({ref:o},{children:t}))]}))},on=t(4594),sn={};sn.styleTagTransform=x(),sn.setAttributes=p(),sn.insert=c().bind(null,"head"),sn.domAPI=a(),sn.insertStyleElement=u(),s()(on.A,sn);const An=on.A&&on.A.locals?on.A.locals:void 0;var an=function(){return an=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},an.apply(this,arguments)},ln=function(n){var r=n.activeSlide,t=n.totalSlides,i=n.className,o=n.children;return(0,e.jsxs)("div",an({className:An.wrapper},{children:[(0,e.jsx)("span",an({className:An.counter},{children:"0".concat(r," / 0").concat(t)})),(0,e.jsx)("div",an({className:R()(An.container,i)},{children:o}))]}))};const cn=t.p+"assets/images/97a6fde2cec4c444c45d.svg";var dn=t(1582),pn={};pn.styleTagTransform=x(),pn.setAttributes=p(),pn.insert=c().bind(null,"head"),pn.domAPI=a(),pn.insertStyleElement=u(),s()(dn.A,pn);const mn=dn.A&&dn.A.locals?dn.A.locals:void 0;var un=function(){return un=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},un.apply(this,arguments)},Cn=Z.forwardRef(function(n,r){var t,i=n.onClick,o=1===n.activeSlide;return(0,e.jsx)("button",un({ref:r,className:R()(mn.btn,(t={},t[mn.isDisabled]=o,t)),type:"button",onClick:i,"aria-label":"Previous slide"},{children:(0,e.jsx)("img",{src:cn,className:mn.icon})}))});Cn.displayName="ArrowButtonLeft";const xn=t.p+"assets/images/3be0b0f387edfe655996.svg";var hn=t(346),gn={};gn.styleTagTransform=x(),gn.setAttributes=p(),gn.insert=c().bind(null,"head"),gn.domAPI=a(),gn.insertStyleElement=u(),s()(hn.A,gn);const fn=hn.A&&hn.A.locals?hn.A.locals:void 0;var bn=function(){return bn=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},bn.apply(this,arguments)},wn=Z.forwardRef(function(n,r){var t,i=n.onClick,o=n.activeSlide===n.totalSlides;return(0,e.jsx)("button",bn({ref:r,className:R()(fn.btn,(t={},t[fn.isDisabled]=o,t)),type:"button",onClick:function(){return i()},"aria-label":"Previous slide"},{children:(0,e.jsx)("img",{src:xn,alt:"Right arrow",className:fn.icon})}))});wn.displayName="ArrowButtonRight";var vn=[{number:1,title:"Литература",periodStart:1992,periodEnd:1997,slides:[{year:1992,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1994,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1995,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1997,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"}]},{number:2,title:"Кино",periodStart:1998,periodEnd:1999,slides:[{year:1998,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1999,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1999,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1999,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"}]},{number:3,title:"Наука",periodStart:2e3,periodEnd:2003,slides:[{year:2e3,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:2001,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:2001,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:2003,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"}]},{number:4,title:"Литература",periodStart:2004,periodEnd:2010,slides:[{year:2004,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:2007,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:2008,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:2010,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"}]},{number:5,title:"Литература",periodStart:1992,periodEnd:1997,slides:[{year:1992,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1994,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1995,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"},{year:1997,text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut mollis diam nisi. Quisque felis purus,"}]},{number:6,title:"Литература",periodStart:2030,periodEnd:9999,slides:[{year:2030,text:"Only придумавает SkyNet."},{year:2050,text:"Вторжение терминаторов модели Т-1000 на планету Земля."},{year:2052,text:"Лидер сопротивления (HR Only) смог остановить войну."},{year:9999,text:"Всё равно все там будем :("}]}],_n=t(3325),yn=t(150),Bn=t(2901),Sn={};Sn.styleTagTransform=x(),Sn.setAttributes=p(),Sn.insert=c().bind(null,"head"),Sn.domAPI=a(),Sn.insertStyleElement=u(),s()(Bn.A,Sn);const kn=Bn.A&&Bn.A.locals?Bn.A.locals:void 0;var Fn=function(){return Fn=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},Fn.apply(this,arguments)},En=function(n){var r=n.children,t=(0,Z.useRef)(null);return(0,Z.useEffect)(function(){t.current&&rn.Ay.fromTo(t.current,{opacity:0},{opacity:1,duration:.8,delay:.9,ease:"power2.out"})},[r]),(0,e.jsx)("div",Fn({ref:t,className:kn.title},{children:r}))},jn=(t(1583),t(6939)),On={};On.styleTagTransform=x(),On.setAttributes=p(),On.insert=c().bind(null,"head"),On.domAPI=a(),On.insertStyleElement=u(),s()(jn.A,On);const $n=jn.A&&jn.A.locals?jn.A.locals:void 0;var Dn=function(){return Dn=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},Dn.apply(this,arguments)},In=function(n){var r=n.slides,t=n.activeSlide,i=n.onSlideClick,o=n.baseSize,s=n.hoverSize,A=n.radius,a=n.centerOffset,l=n.isHover,c=n.hoverIndex,d=n.onMouseEnter,p=n.onMouseLeave,m=A-(s-o)/2,u=(0,Z.useRef)(null),C=(0,Z.useRef)([]),x=(0,Z.useRef)(0);return(0,Z.useEffect)(function(){if(u.current){var n=360/r.length,e=(1-t)*n;x.current=e,C.current.forEach(function(n,r){n&&(n.style.transform="\n        translate(-50%, -50%)\n        rotate(".concat(-e,"deg)\n      "))}),console.log("Вращение: ",e)}},[t,r.length]),(0,e.jsx)(_n.RC,Dn({ref:u,modules:[yn.Vx],slidesPerView:"auto",centeredSlides:!0,allowTouchMove:!1,noSwiping:!0,className:$n.swiperContainer,onSlideChange:function(n){var r=360*-n.progress;x.current=r,C.current.forEach(function(n){n&&(n.style.transform="\n              translate(-50%, -50%)\n              rotate(".concat(0,"deg)\n            "))})}},{children:r.map(function(n,s){var A=(360*s/r.length-60)*Math.PI/180,u=a+m*Math.cos(A),x=a+m*Math.sin(A),h=t===n.number,g=l&&c===n.number;return(0,e.jsx)(_n.qr,Dn({className:R()($n.swiperSlide,h&&$n.active),style:{position:"absolute",left:"".concat(u,"px"),top:"".concat(x,"px"),width:"".concat(o,"px"),height:"".concat(o,"px"),transformOrigin:"center center",zIndex:h?10:g?5:1},onClick:function(){return i(n.number,s)},onMouseEnter:function(){return d(n.number)},onMouseLeave:p},{children:(0,e.jsxs)("div",Dn({ref:function(n){return C.current[s]=n},className:$n.slideContent,style:{transform:"translate(-50%, -50%)",width:"100%",height:"100%"}},{children:[(g||h)&&(0,e.jsx)("span",{children:n.number}),h&&(0,e.jsx)(En,{children:n.title})]}))}),n.number)})}))},Rn=function(n){var r=n.targetRef,t=n.slideElements,e=n.activeIndex,i=n.slidesCount;return(0,Z.useEffect)(function(){if(r.current&&t.length){var n=360/i*-e;rn.os.to(r.current,{rotation:n,duration:1,ease:"power2.out",transformOrigin:"center center"})}},[e,i,t,r]),null};const Pn=t.p+"assets/images/49457574fc11367049bc.svg";t(6709);var Un=t(5093),zn={};zn.styleTagTransform=x(),zn.setAttributes=p(),zn.insert=c().bind(null,"head"),zn.domAPI=a(),zn.insertStyleElement=u(),s()(Un.A,zn);const Wn=Un.A&&Un.A.locals?Un.A.locals:void 0;var Gn=function(){return Gn=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},Gn.apply(this,arguments)},Nn=function(n){var r=n.slides,t=n.name,i=void 0===t?"":t,o=(0,Z.useRef)(null),s=(0,Z.useRef)(null),A=(0,Z.useRef)(null),a=(0,Z.useRef)([]),l=(0,Z.useState)(!0),c=l[0],d=l[1],p=(0,Z.useState)(!1),m=p[0],u=p[1],C=(0,F.U)("(max-width: 680px)");(0,Z.useEffect)(function(){o.current&&o.current.slideTo(0)},[r]),(0,Z.useEffect)(function(){var n=[];if(s.current&&n.push(s.current),A.current&&C&&n.push(A.current),0!==n.length)return rn.Ay.set(n,{opacity:0,y:10}),a.current=n.map(function(n){return rn.Ay.to(n,{opacity:1,y:0,duration:.8,delay:.2,ease:"power2.out"})}),function(){a.current.forEach(function(n){return null==n?void 0:n.kill()}),a.current=[]}},[r,C]);var x=function(){o.current&&(d(o.current.isBeginning),u(o.current.isEnd))};return(0,e.jsxs)(e.Fragment,{children:[C&&(0,e.jsx)("div",Gn({ref:A,className:Wn.title},{children:i})),(0,e.jsxs)("div",Gn({ref:s,className:Wn.container},{children:[(0,e.jsx)(_n.RC,Gn({className:Wn.slider,modules:[yn.dK],slidesPerView:1.5,spaceBetween:30,onSwiper:function(n){o.current=n,x()},onSlideChange:x,speed:400,pagination:!!C&&{clickable:!0},breakpoints:{680:{slidesPerView:2,pagination:!1,spaceBetween:80},992:{slidesPerView:3,spaceBetween:80}}},{children:r.map(function(n,r){return(0,e.jsxs)(_n.qr,Gn({className:Wn.slide},{children:[(0,e.jsx)("div",Gn({className:Wn.slideTitle},{children:n.year})),(0,e.jsx)("div",Gn({className:Wn.slideContent},{children:n.text}))]}),r)})})),!C&&(0,e.jsxs)("div",Gn({className:Wn.navigation},{children:[!c&&(0,e.jsx)("button",Gn({className:Wn.prev,onClick:function(){var n;return null===(n=o.current)||void 0===n?void 0:n.slidePrev()},"aria-label":"Previous slide",disabled:c},{children:(0,e.jsx)("img",{src:Pn,alt:"Previous"})})),!m&&(0,e.jsx)("button",Gn({className:Wn.next,onClick:function(){var n;return null===(n=o.current)||void 0===n?void 0:n.slideNext()},"aria-label":"Next slide",disabled:m},{children:(0,e.jsx)("img",{src:Pn,alt:"Next"})}))]}))]}))]})},Tn=t(651),Yn={};Yn.styleTagTransform=x(),Yn.setAttributes=p(),Yn.insert=c().bind(null,"head"),Yn.domAPI=a(),Yn.insertStyleElement=u(),s()(Tn.A,Yn);const Qn=Tn.A&&Tn.A.locals?Tn.A.locals:void 0;var Ln=function(){return Ln=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},Ln.apply(this,arguments)},Mn=function(){var n,r,t=(0,Z.useState)(!1),i=t[0],o=t[1],s=(0,Z.useState)(0),A=s[0],a=s[1],l=(0,Z.useState)(1),c=l[0],d=l[1],p=(0,Z.useRef)(null),m=(0,Z.useRef)([]),u=(0,F.U)("(max-width: 680px)"),C=(0,Z.useRef)(null),x=(0,Z.useRef)(null);(0,Z.useEffect)(function(){p.current&&(m.current=Array.from(p.current.querySelectorAll(".swiper-slide")))},[]);var h=vn.findIndex(function(n){return n.number===c});return(0,e.jsxs)("div",Ln({className:Qn.wrapper},{children:[(0,e.jsxs)("div",Ln({className:Qn.sliderWrapper},{children:[(0,e.jsxs)("div",Ln({className:R()(Qn.slider,"circle-slider"),ref:p},{children:[(0,e.jsx)(In,{slides:vn,activeSlide:c,onSlideClick:function(n){d(n)},prev:C,next:x,baseSize:6,hoverSize:56,radius:290,centerOffset:265,isHover:i,hoverIndex:A,onMouseEnter:function(n){a(n),o(!0)},onMouseLeave:function(){return o(!1)}}),(0,e.jsx)(Rn,{targetRef:p,slideElements:m.current,activeIndex:h,slidesCount:vn.length})]})),(0,e.jsx)(en,{periodStart:null===(n=vn[c-1])||void 0===n?void 0:n.periodStart,periodEnd:null===(r=vn[c-1])||void 0===r?void 0:r.periodEnd}),(0,e.jsx)("div",{className:Qn.line})]})),u&&(0,e.jsx)(Nn,{slides:vn[c-1].slides,name:vn[c-1].title}),(0,e.jsxs)(ln,Ln({activeSlide:c,totalSlides:vn.length},{children:[(0,e.jsx)(Cn,{ref:C,onClick:function(){1!==c&&d(c-1)},activeSlide:c}),(0,e.jsx)(wn,{ref:x,onClick:function(){c!==vn.length&&d(c+1)},activeSlide:c,totalSlides:vn.length})]})),!u&&(0,e.jsx)(Nn,{slides:vn[c-1].slides})]}))},qn=t(7087),Hn={};Hn.styleTagTransform=x(),Hn.setAttributes=p(),Hn.insert=c().bind(null,"head"),Hn.domAPI=a(),Hn.insertStyleElement=u(),s()(qn.A,Hn);const Vn=qn.A&&qn.A.locals?qn.A.locals:void 0;var Kn=function(){return Kn=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var i in r=arguments[t])Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i]);return n},Kn.apply(this,arguments)},Zn=function(){return(0,e.jsxs)("div",Kn({className:Vn.home},{children:[(0,e.jsxs)(K,{children:["Исторические ",(0,e.jsx)("br",{})," даты"]}),(0,e.jsx)(Mn,{})]}))};i.createRoot(document.getElementById("root")).render((0,e.jsx)(function(){return(0,e.jsx)(_,{children:(0,e.jsx)(D,{children:(0,e.jsx)(Zn,{})})})},{}))},4594:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".ArrowsContainer-module__wrapper__NOafU{padding:0 4.1666666667vw}.ArrowsContainer-module__wrapper__NOafU .ArrowsContainer-module__counter__w0g0X{font-size:14px;color:#42567a}.ArrowsContainer-module__wrapper__NOafU .ArrowsContainer-module__container__Pi_qg{display:flex;margin-top:20px;column-gap:.625vw}@media(max-width: 1600px){.ArrowsContainer-module__wrapper__NOafU .ArrowsContainer-module__container__Pi_qg{column-gap:10px}}@media(max-width: 680px){.ArrowsContainer-module__wrapper__NOafU{padding:0;position:absolute;bottom:20px}}","",{version:3,sources:["webpack://./src/pages/Home/AnimationSlider/Slider/Arrows/ArrowsContainer/ArrowsContainer.module.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAEA,wCACI,wBAAA,CACA,gFACI,cAAA,CACA,aAAA,CAGJ,kFACI,YAAA,CACA,eAAA,CACA,iBAAA,CCiBP,0BDpBG,kFAMQ,eAAA,CAAA,CCVX,yBDHD,wCAkBQ,SAAA,CACA,iBAAA,CACA,WAAA,CAAA",sourcesContent:['@use "@/styles/mixins.scss" as *;\n\r\n.wrapper {\r\n    padding: 0 calcVW(80);\r\n    .counter {\r\n        font-size: 14px;\r\n        color: #42567A;\r\n    }\r\n\r\n    .container {\r\n        display: flex;\r\n        margin-top: 20px;\r\n        column-gap: calcVW(10, 1600);\r\n\r\n        @include vp--1600 {\r\n            column-gap: 10px;\r\n        }\r\n    }\r\n\r\n    @include vp--680 {\r\n        padding: 0;\r\n        position: absolute;\r\n        bottom: 20px;\r\n    }\r\n}',"@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={wrapper:"ArrowsContainer-module__wrapper__NOafU",counter:"ArrowsContainer-module__counter__w0g0X",container:"ArrowsContainer-module__container__Pi_qg"};const A=s},5093:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,'.BottomSlider-module__title__Ei8ab{font-size:20px;font-weight:bold;color:#42567a;margin-bottom:20px}.BottomSlider-module__slideTitle__tOJAx{color:#3877ee;font-size:25px;font-family:"Bebas Neue"}@media(max-width: 680px){.BottomSlider-module__slideTitle__tOJAx{font-size:5vw}}.BottomSlider-module__container__xp8aC{opacity:0;position:relative;padding:40px 80px}@media(max-width: 680px){.BottomSlider-module__container__xp8aC{border-top:1px solid #c7cdd9;padding:50px 0 10px}}.BottomSlider-module__slider__er8Bc{padding:10px 0;overflow:visible}.BottomSlider-module__slideContent__UjM3k{color:#42567a;margin-top:25px;font-size:20px;line-height:30px}@media(max-width: 680px){.BottomSlider-module__slideContent__UjM3k{font-size:4.375vw;line-height:140%}}.BottomSlider-module__navigation__WHyZO button{position:absolute;width:40px;height:40px;background-color:#fff;border-radius:100%;display:flex;justify-content:center;align-items:center;z-index:10}.BottomSlider-module__navigation__WHyZO button.BottomSlider-module__prev__GweWm{left:20px;top:50%}.BottomSlider-module__navigation__WHyZO button.BottomSlider-module__prev__GweWm img{transform:rotate(180deg)}.BottomSlider-module__navigation__WHyZO button.BottomSlider-module__next__yIZ43{right:20px;top:50%}',"",{version:3,sources:["webpack://./src/pages/Home/AnimationSlider/BottomSlider/BottomSlider.module.scss","webpack://./src/styles/variables.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAGA,mCACI,cAAA,CACA,gBAAA,CACA,aCJe,CDKf,kBAAA,CAGJ,wCACI,aCXS,CDYT,cAAA,CACA,wBAAA,CERH,yBFKD,wCAMQ,aAAA,CAAA,CAIR,uCACI,SAAA,CACA,iBAAA,CACA,iBAAA,CElBH,yBFeD,uCAMQ,4BAAA,CACA,mBAAA,CAAA,CAIR,oCACI,cAAA,CACA,gBAAA,CAGJ,0CACI,aCnCe,CDoCf,eAAA,CACA,cAAA,CACA,gBAAA,CEnCH,yBF+BD,0CAOQ,iBAAA,CACA,gBAAA,CAAA,CAIR,+CACI,iBAAA,CACA,UAAA,CACA,WAAA,CACA,qBAAA,CACA,kBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CAEA,gFACI,SAAA,CACA,OAAA,CAEA,oFACI,wBAAA,CAIR,gFACI,UAAA,CACA,OAAA",sourcesContent:['@use "@/styles/mixins.scss" as *;\n@use \'@styles/variables.scss\' as *;\r\n\r\n.title {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: $color-black-blue;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.slideTitle {\r\n    color: $color-blue;\r\n    font-size: 25px;\r\n    font-family: "Bebas Neue";\r\n\r\n    @include vp--680 {\r\n        font-size: calcVW(16, 320);\r\n    }\r\n}\r\n\r\n.container {\r\n    opacity: 0;\r\n    position: relative;\r\n    padding: 40px 80px;\r\n\r\n    @include vp--680 {\r\n        border-top: 1px solid #C7CDD9;\r\n        padding: 50px 0 10px;\r\n    }\r\n}\r\n\r\n.slider {\r\n    padding: 10px 0;\r\n    overflow: visible;\r\n}\r\n\r\n.slideContent {\r\n    color: $color-black-blue;\r\n    margin-top: 25px;\r\n    font-size: 20px;\r\n    line-height: 30px;\r\n\r\n    @include vp--680 {\r\n        font-size: calcVW(14, 320);\r\n        line-height: 140%;\r\n    }\r\n}\r\n\r\n.navigation button {\r\n    position: absolute;\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: #FFFFFF;\r\n    border-radius: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 10;\r\n\r\n    &.prev {\r\n        left: 20px;\r\n        top: 50%;\r\n\r\n        img {\r\n            transform: rotate(180deg);\r\n        }\r\n    }\r\n\r\n    &.next {\r\n        right: 20px;\r\n        top: 50%;\r\n    }\r\n}',"$color-blue: #3877EE;\r\n$color-pink: #EF5DA8;\r\n$color-black-blue: #42567A;","@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={title:"BottomSlider-module__title__Ei8ab",slideTitle:"BottomSlider-module__slideTitle__tOJAx",container:"BottomSlider-module__container__xp8aC",slider:"BottomSlider-module__slider__er8Bc",slideContent:"BottomSlider-module__slideContent__UjM3k",navigation:"BottomSlider-module__navigation__WHyZO",prev:"BottomSlider-module__prev__GweWm",next:"BottomSlider-module__next__yIZ43"};const A=s},5693:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".Flex-module__flex__HvlAv{display:flex;align-items:center}","",{version:3,sources:["webpack://./src/components/Flex/Flex.module.scss"],names:[],mappings:"AACA,0BACI,YAAA,CACA,kBAAA",sourcesContent:['@use "@/styles/mixins.scss" as *;\n.flex {\r\n    display: flex;\r\n    align-items: center;\r\n}'],sourceRoot:""}]),s.locals={flex:"Flex-module__flex__HvlAv"};const A=s},6085:n=>{n.exports="data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA"},6781:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".Lines-module__line__rhLzn{position:absolute;background:rgba(66,86,122,.1);height:100%;width:1px;top:0;left:50%}","",{version:3,sources:["webpack://./src/components/Container/Lines/Lines.module.scss"],names:[],mappings:"AAGA,2BACI,iBAAA,CACA,6BAAA,CACA,WAAA,CACA,SAAA,CACA,KAAA,CACA,QAAA",sourcesContent:["@use \"@/styles/mixins.scss\" as *;\n@use '@styles/variables.scss' as *;\r\n\r\n.line {\r\n    position: absolute;\r\n    background: rgba($color: $color-black-blue, $alpha: 0.1);\r\n    height: 100%;\r\n    width: 1px;\r\n    top: 0;\r\n    left: 50%;\r\n}"],sourceRoot:""}]),s.locals={line:"Lines-module__line__rhLzn"};const A=s},6939:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".Slider-module__swiperContainer__N6lZP{width:100%;height:100%;position:relative;overflow:visible;z-index:10}.Slider-module__swiperSlide__oI2Et{display:flex;justify-content:center;align-items:center;position:relative;z-index:100;transition:width .3s ease,height .3s ease,background .3s ease,box-shadow .3s ease}.Slider-module__swiperSlide__oI2Et:hover{width:56px !important;height:56px !important;z-index:10;transform-origin:center center !important;transition:width .3s ease,height .3s ease,background .3s ease,box-shadow .3s ease}.Slider-module__swiperSlide__oI2Et:hover .Slider-module__slideContent__Ou2Ue{background:#fff;border:1px solid rgba(48,62,88,.5)}.Slider-module__swiperSlide__oI2Et.Slider-module__active__q22_D{width:56px !important;height:56px !important;z-index:10;transform-origin:center center !important;transition:width .3s ease,height .3s ease,background .3s ease,box-shadow .3s ease}.Slider-module__swiperSlide__oI2Et.Slider-module__active__q22_D .Slider-module__slideContent__Ou2Ue{background:#fff;border:1px solid rgba(48,62,88,.5)}.Slider-module__slideContent__Ou2Ue{width:100%;height:100%;background:#42567a;position:relative;z-index:100;border-radius:50%;display:flex;justify-content:center;align-items:center;box-shadow:0 4px 15px rgba(0,0,0,.1)}","",{version:3,sources:["webpack://./src/pages/Home/AnimationSlider/Slider/Slider.module.scss","webpack://./src/styles/mixins.scss","webpack://./src/styles/variables.scss"],names:[],mappings:"AAGA,uCACI,UAAA,CACA,WAAA,CACA,iBAAA,CACA,gBAAA,CACA,UAAA,CAGJ,mCACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,WAAA,CACA,iFACI,CAMJ,yCCiBA,qBAAA,CACA,sBAAA,CACA,UAAA,CACH,yCAAA,CDlBO,iFACI,CCmBR,6EACI,eAAA,CACA,kCAAA,CDfJ,gECQA,qBAAA,CACA,sBAAA,CACA,UAAA,CACH,yCAAA,CDTO,iFACI,CCUR,oGACI,eAAA,CACA,kCAAA,CDLR,oCACI,UAAA,CACA,WAAA,CACA,kBE5Ce,CF6Cf,iBAAA,CACA,WAAA,CACA,iBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,oCAAA",sourcesContent:["@use \"@/styles/mixins.scss\" as *;\n@use '@styles/variables.scss' as *;\r\n\r\n.swiperContainer {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: relative;\r\n    overflow: visible;\r\n    z-index: 10;\r\n}\r\n\r\n.swiperSlide {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    z-index: 100;\r\n    transition: \r\n        width 0.3s ease,\r\n        height 0.3s ease,\r\n        background 0.3s ease,\r\n        box-shadow 0.3s ease;\r\n    \r\n    \r\n    &:hover {\r\n        @include active-slide;\r\n        transition: \r\n            width 0.3s ease,\r\n            height 0.3s ease,\r\n            background 0.3s ease,\r\n            box-shadow 0.3s ease;\r\n    }\r\n    \r\n    &.active {\r\n        @include active-slide;\r\n        transition: \r\n            width 0.3s ease,\r\n            height 0.3s ease,\r\n            background 0.3s ease,\r\n            box-shadow 0.3s ease;\r\n    }\r\n}\r\n\r\n.slideContent {\r\n    width: 100%;\r\n    height: 100%;\r\n    background: $color-black-blue;\r\n    position: relative;\r\n    z-index: 100;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}","@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}","$color-blue: #3877EE;\r\n$color-pink: #EF5DA8;\r\n$color-black-blue: #42567A;"],sourceRoot:""}]),s.locals={swiperContainer:"Slider-module__swiperContainer__N6lZP",swiperSlide:"Slider-module__swiperSlide__oI2Et",slideContent:"Slider-module__slideContent__Ou2Ue",active:"Slider-module__active__q22_D"};const A=s},7087:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".Home-module__home__Fbzsv{display:flex;flex-direction:column;overflow:hidden;border-left:1px solid rgba(66,86,122,.1);border-right:1px solid rgba(66,86,122,.1)}@media(max-width: 752px){.Home-module__home__Fbzsv{border:none}}","",{version:3,sources:["webpack://./src/pages/Home/Home.module.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AAGA,0BACE,YAAA,CACA,qBAAA,CACA,eAAA,CACA,wCAAA,CACA,yCAAA,CCGD,yBDRD,0BAQI,WAAA,CAAA",sourcesContent:["@use \"@/styles/mixins.scss\" as *;\n@use '@styles/variables.scss' as *;\r\n\r\n.home {\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  border-left: 1px solid rgba($color: $color-black-blue, $alpha: 0.1);\r\n  border-right: 1px solid rgba($color: $color-black-blue, $alpha: 0.1);\r\n\r\n  @include vp--752 {\r\n    border: none;\r\n  }\r\n}\r\n","@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={home:"Home-module__home__Fbzsv"};const A=s},7391:(n,r,t)=>{t.d(r,{A:()=>x});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o),A=t(4417),a=t.n(A),l=new URL(t(8857),t.b),c=new URL(t(170),t.b),d=new URL(t(3344),t.b),p=s()(i()),m=a()(l),u=a()(c),C=a()(d);p.push([n.id,`@font-face{font-style:normal;font-weight:400;font-family:"PT Sans";src:url(${m}) format("truetype")}@font-face{font-style:normal;font-weight:700;font-family:"PT Sans";src:url(${u}) format("truetype")}@font-face{font-style:normal;font-weight:normal;font-family:"Bebas Neue";src:url(${C}) format("truetype")}*{margin:0;padding:0;border:0}button,a{position:relative;font-family:"PT Sans",sans-serif;font-weight:400;-webkit-text-fill-color:#000;cursor:pointer}button::before,a::before{content:"";position:absolute;bottom:0;right:0;width:100%;height:100%;z-index:1}@media(max-width: 1280px){button::before,a::before{width:100%;height:100%}}@media(max-width: 992px){button::before,a::before{width:100%;height:100%}}*,*::before,*::after{box-sizing:border-box}body{width:100vw;overflow-x:hidden;font-family:"PT Sans",sans-serif;font-weight:400;color:#000;font-style:normal;font-weight:400;line-height:100%;background:#f0f0f0;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media(max-width: 1280px){body{font-size:12px;line-height:20px}}a{color:#000;text-decoration:none}.circle-slider .swiper-wrapper{transform:translate3d(0px, 0px, 0px) !important}.swiper-pagination{position:relative !important;margin-top:40%}.swiper-pagination .swiper-pagination-bullet-active{background:#42567a}`,"",{version:3,sources:["webpack://./src/styles/fonts.scss","webpack://./src/styles/global.scss","webpack://./src/styles/mixins.scss","webpack://./src/styles/variables.scss"],names:[],mappings:"AAAA,WACC,iBAAA,CACA,eAAA,CACG,qBAAA,CACA,8DAAA,CAGJ,WACC,iBAAA,CACA,eAAA,CACG,qBAAA,CACA,8DAAA,CAGJ,WACC,iBAAA,CACA,kBAAA,CACG,wBAAA,CACA,8DAAA,CCdJ,EACC,QAAA,CACA,SAAA,CACA,QAAA,CAGD,SAEC,iBAAA,CACE,gCAAA,CACA,eAAA,CACF,4BAAA,CACG,cAAA,CACH,yBACC,UAAA,CACA,iBAAA,CACA,QAAA,CACA,OAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CCDD,0BDNA,yBAUK,UAAA,CACA,WAAA,CAAA,CCXL,yBAAA,yBDeE,UAAA,CACA,WAAA,CAAA,CAKH,qBAGC,qBAAA,CAGD,KACC,WAAA,CACA,iBAAA,CACE,gCAAA,CACA,eAAA,CACF,UAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACG,kBAAA,CAEH,kCAAA,CACA,iCAAA,CCjCA,0BDqBD,KAeE,cAAA,CACA,gBAAA,CAAA,CAIF,EACC,UAAA,CACA,oBAAA,CAGD,+BACC,+CAAA,CAGD,mBACC,4BAAA,CACA,cAAA,CAEA,oDACC,kBE5EiB",sourcesContent:["@font-face {\r\n\tfont-style: normal;\r\n\tfont-weight: 400;\r\n    font-family: 'PT Sans';\r\n    src: url('../assets/fonts/PTSans-Regular.ttf') format('truetype');\r\n}\r\n\r\n@font-face {\r\n\tfont-style: normal;\r\n\tfont-weight: 700;\r\n    font-family: 'PT Sans';\r\n    src: url('../assets/fonts/PTSans-Bold.ttf') format('truetype');\r\n}\r\n\r\n@font-face {\r\n\tfont-style: normal;\r\n\tfont-weight: normal;\r\n    font-family: 'Bebas Neue';\r\n    src: url('../assets/fonts/BebasNeue-Regular.ttf') format('truetype');\r\n}\r\n","@use './fonts.scss';\r\n@use './mixins.scss' as *;\r\n@use './variables.scss' as *;\r\n\r\n* {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n}\r\n\r\nbutton,\r\na {\r\n\tposition: relative;\r\n  \tfont-family: \"PT Sans\", sans-serif;\r\n  \tfont-weight: 400;\r\n\t-webkit-text-fill-color: #000000;\r\n    cursor: pointer;\r\n\t&::before {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tbottom: 0;\r\n\t\tright: 0;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tz-index: 1;\r\n\r\n\t\t@include vp--1280 {\r\n\t\t    width: 100%;\r\n\t\t    height: 100%;\r\n\t\t}\r\n\r\n\t\t@include vp--992 {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n\tbox-sizing: border-box;\r\n}\r\n\r\nbody {\r\n\twidth: 100vw;\r\n\toverflow-x: hidden;\r\n  \tfont-family: \"PT Sans\", sans-serif;\r\n  \tfont-weight: 400;\r\n\tcolor: #000000;\r\n\tfont-style: normal;\r\n\tfont-weight: 400;\r\n\tline-height: 100%;\r\n    background: rgba(240, 240, 240, 1);\r\n\r\n\t-webkit-font-smoothing: antialiased;\r\n\t-moz-osx-font-smoothing: grayscale;\r\n\r\n\t@include vp--1280 {\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 20px;\r\n\t}\r\n}\r\n\r\na {\r\n\tcolor: #000000;\r\n\ttext-decoration: none;\r\n}\r\n\r\n.circle-slider .swiper-wrapper {\r\n\ttransform: translate3d(0px, 0px, 0px)!important;\r\n}\r\n\r\n.swiper-pagination {\r\n\tposition: relative!important;\r\n\tmargin-top: 40%;\r\n\r\n\t.swiper-pagination-bullet-active {\r\n\t\tbackground: $color-black-blue;\r\n\t}\r\n}","@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}","$color-blue: #3877EE;\r\n$color-pink: #EF5DA8;\r\n$color-black-blue: #42567A;"],sourceRoot:""}]);const x=p},8416:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),s.locals={};const A=s},8857:(n,r,t)=>{n.exports=t.p+"assets/fonts/77e92507394e2309d837.ttf"},9861:(n,r,t)=>{t.d(r,{A:()=>A});var e=t(1354),i=t.n(e),o=t(6314),s=t.n(o)()(i());s.push([n.id,".DataPeriod-module__periodWrapper__UKj52{position:absolute;top:50%;left:50%;gap:5.2083333333vw;z-index:3;opacity:.9;transform:translate(-50%, -50%);pointer-events:none}.DataPeriod-module__periodWrapper__UKj52 span{font-size:10.4166666667vw;line-height:8.3333333333vw;font-weight:bold;position:relative;z-index:inherit}.DataPeriod-module__periodWrapper__UKj52 span:first-child{color:#6155f5}.DataPeriod-module__periodWrapper__UKj52 span:last-child{color:#ef5da8}@media(max-width: 680px){.DataPeriod-module__periodWrapper__UKj52 span{font-size:17.5vw}}","",{version:3,sources:["webpack://./src/pages/Home/AnimationSlider/Slider/DatePeriod/DataPeriod.module.scss","webpack://./src/styles/mixins.scss"],names:[],mappings:"AACA,yCACI,iBAAA,CACA,OAAA,CACA,QAAA,CACA,kBAAA,CACA,SAAA,CACA,UAAA,CACA,+BAAA,CACA,mBAAA,CAEA,8CACI,yBAAA,CACA,0BAAA,CACA,gBAAA,CACA,iBAAA,CACA,eAAA,CAEA,0DACI,aAAA,CAGJ,yDACI,aAAA,CClBX,yBDMG,8CAgBQ,gBAAA,CAAA",sourcesContent:['@use "@/styles/mixins.scss" as *;\n.periodWrapper {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    gap: calcVW(100);\r\n    z-index: 3;\r\n    opacity: 0.9;\r\n    transform: translate(-50%, -50%);\r\n    pointer-events: none;\r\n\r\n    span {\r\n        font-size: calcVW(200);\r\n        line-height: calcVW(160);\r\n        font-weight: bold;\r\n        position: relative;\r\n        z-index: inherit;\r\n\r\n        &:first-child {\r\n            color: #6155F5;\r\n        }\r\n\r\n        &:last-child {\r\n            color: #EF5DA8;\r\n        }\r\n\r\n        @include vp--680 {\r\n            font-size: calcVW(56, 320);\r\n        }\r\n    }\r\n}',"@function calcVW($px, $width: 1920) {\r\n\t@return calc(1vw / ($width / 100) * $px);\r\n}\r\n\r\n@mixin vp--680 {\r\n\t@media (max-width: 680px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--752 {\r\n\t@media (max-width: 752px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--992 {\r\n\t@media (max-width: 992px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1280 {\r\n\t@media (max-width: 1280px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1600 {\r\n\t@media (max-width: 1600px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin vp--1920 {\r\n\t@media (min-width: 1920px) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin active-slide {\r\n    width: 56px !important;\r\n    height: 56px !important;\r\n    z-index: 10;\r\n\ttransform-origin: center center!important;\r\n    \r\n    .slideContent {\r\n        background: #FFFFFF;\r\n        border: 1px solid rgba($color: #303E58, $alpha: 0.5);\r\n    }\r\n}"],sourceRoot:""}]),s.locals={periodWrapper:"DataPeriod-module__periodWrapper__UKj52"};const A=s}},t={};function e(n){var i=t[n];if(void 0!==i)return i.exports;var o=t[n]={id:n,exports:{}};return r[n](o,o.exports,e),o.exports}e.m=r,n=[],e.O=(r,t,i,o)=>{if(!t){var s=1/0;for(c=0;c<n.length;c++){for(var[t,i,o]=n[c],A=!0,a=0;a<t.length;a++)(!1&o||s>=o)&&Object.keys(e.O).every(n=>e.O[n](t[a]))?t.splice(a--,1):(A=!1,o<s&&(s=o));if(A){n.splice(c--,1);var l=i();void 0!==l&&(r=l)}}return r}o=o||0;for(var c=n.length;c>0&&n[c-1][2]>o;c--)n[c]=n[c-1];n[c]=[t,i,o]},e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&"SCRIPT"===r.currentScript.tagName.toUpperCase()&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");if(t.length)for(var i=t.length-1;i>-1&&(!n||!/^http(s?):/.test(n));)n=t[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),(()=>{e.b=document.baseURI||self.location.href;var n={792:0};e.O.j=r=>0===n[r];var r=(r,t)=>{var i,o,[s,A,a]=t,l=0;if(s.some(r=>0!==n[r])){for(i in A)e.o(A,i)&&(e.m[i]=A[i]);if(a)var c=a(e)}for(r&&r(t);l<s.length;l++)o=s[l],e.o(n,o)&&n[o]&&n[o][0](),n[o]=0;return e.O(c)},t=self.webpackChunkreact_typescript_webpack_template=self.webpackChunkreact_typescript_webpack_template||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})(),e.nc=void 0;var i=e.O(void 0,[957],()=>e(4551));i=e.O(i)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,